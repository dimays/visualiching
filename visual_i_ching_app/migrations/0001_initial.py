# Generated by Django 4.2.1 on 2023-06-04 20:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hexagram',
            fields=[
                ('hexagram_id', models.BigAutoField(db_comment='Primary key representing a unique hexagram', primary_key=True, serialize=False)),
                ('chinese_character', models.CharField(db_comment='Original Chinese character representing the name of this hexagram', max_length=2)),
                ('wade_giles_romanization', models.CharField(db_comment='Wade-Giles romanization of the name of this hexagram', max_length=30)),
                ('pinyin_romanization', models.CharField(db_comment='Pinyin romanization of the name of this hexagram', max_length=30)),
                ('english_translation', models.CharField(db_comment='English translation/interpretation of the name of this hexagram', max_length=100)),
                ('hexagram_symbol', models.CharField(db_comment='Unicode hexagram symbol representing this hexagram', max_length=1)),
                ('image_url', models.CharField(db_comment="URL path to the 'Dall-E 2'-generated image for this hexagram", max_length=100)),
                ('description', models.TextField(db_comment='Description of this hexagram')),
                ('judgment_text', models.TextField(db_comment='English translation of the written judgment for this hexagram')),
                ('judgment_interpretation', models.TextField(db_comment='Intepretation of this judgment offered by a commentator')),
                ('image_text', models.TextField(db_comment='English translation of the written image for this hexagram')),
                ('image_interpretation', models.TextField(db_comment='Intepretation of this image offered by a commentator')),
                ('full_change_text', models.TextField(blank=True, db_comment='Optional: special meaning of all the lines changing', default=None, null=True)),
                ('full_change_interpretation', models.TextField(blank=True, db_comment='Optional: interpretation of special meaning of all the lines changing', default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='Time (in UTC) at which this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='Time (in UTC) at which this record was most recently updated')),
                ('deleted_at', models.DateTimeField(blank=True, db_comment="Time (in UTC) at which this record was 'soft-deleted' (flagged deleted)", default=None, null=True)),
            ],
            options={
                'db_table': 'hexagrams',
                'db_table_comment': 'A record for each unique hexagram',
            },
        ),
        migrations.CreateModel(
            name='LineType',
            fields=[
                ('line_type_id', models.BigAutoField(db_comment='Primary key representing a type of line within the context of a changing hexagram', primary_key=True, serialize=False)),
                ('name', models.CharField(db_comment="Name given to this line type (eg. 'Young Yin')", max_length=10)),
                ('image_url', models.CharField(db_comment='URL path to the line drawing of this line type', max_length=100)),
                ('description', models.TextField(db_comment='Description of this line type')),
                ('is_changing', models.BooleanField(db_comment='TRUE if this line type is changing, FALSE if this line is unchanging')),
                ('line_value', models.SmallIntegerField(db_comment='Represents the value that corresponds with this line type (6-9) as it relates to consulting the oracle with coins or yarrow stalks')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='Time (in UTC) at which this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='Time (in UTC) at which this record was most recently updated')),
                ('deleted_at', models.DateTimeField(blank=True, db_comment="Time (in UTC) at which this record was 'soft-deleted' (flagged deleted)", default=None, null=True)),
            ],
            options={
                'db_table': 'line_types',
                'db_table_comment': 'A record for each type of line possible in an I Ching reading (ie. Old/Young Yin/Yang)',
            },
        ),
        migrations.CreateModel(
            name='Trigram',
            fields=[
                ('trigram_id', models.BigAutoField(db_comment='Primary key representing a unique trigram', primary_key=True, serialize=False)),
                ('chinese_character', models.CharField(db_comment='Original Chinese character representing the name of this trigram', max_length=2)),
                ('wade_giles_romanization', models.CharField(db_comment='Wade-Giles romanization of the name of this trigram', max_length=30)),
                ('pinyin_romanization', models.CharField(db_comment='Pinyin romanization of the name of this trigram', max_length=30)),
                ('english_translation', models.CharField(db_comment='English translation/interpretation of the name of this trigram', max_length=100)),
                ('trigram_symbol', models.CharField(db_comment='Unicode representation of the trigram', max_length=1)),
                ('description', models.TextField(db_comment='Verbose description of the trigram to provide context in readings')),
                ('family_relationship', models.CharField(db_comment='Designated family relationship for this trigram', max_length=30)),
                ('attribute', models.CharField(db_comment='Designated key attribute for this trigram', max_length=30)),
                ('symbolic_animal', models.CharField(db_comment='Designated symbolic animal for this trigram', max_length=30)),
                ('image_url', models.CharField(db_comment="URL path to the 'Dall-E 2'-generated image for this trigram", max_length=100)),
                ('primal_dir', models.CharField(db_comment='Cardinal direction representation of this trigram in the Primal Arrangement', max_length=2)),
                ('primal_season', models.CharField(db_comment='Seasonal representation of this trigram in the Primal Arrangement', max_length=30)),
                ('inner_world_dir', models.CharField(db_comment='Cardinal direction representation of this trigram in the Inner-World Arrangement', max_length=2)),
                ('inner_world_season', models.CharField(db_comment='Seasonal representation of this trigram in the Inner-World Arrangement', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='Time (in UTC) at which this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='Time (in UTC) at which this record was most recently updated')),
                ('deleted_at', models.DateTimeField(blank=True, db_comment="Time (in UTC) at which this record was 'soft-deleted' (flagged deleted)", default=None, null=True)),
            ],
            options={
                'db_table': 'trigrams',
                'db_table_comment': 'A record for each unique trigram',
            },
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('reading_id', models.BigAutoField(db_comment='Primary key representing a unique I Ching reading from a given user', primary_key=True, serialize=False)),
                ('prompt', models.TextField(db_comment='User-entered prompt for this reading')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='Time (in UTC) at which this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='Time (in UTC) at which this record was most recently updated')),
                ('deleted_at', models.DateTimeField(blank=True, db_comment="Time (in UTC) at which this record was 'soft-deleted' (flagged deleted)", default=None, null=True)),
                ('fifth_line_type', models.ForeignKey(db_comment='Foreign key, references line_types.line_type_id, represents the type of the fifth line of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='fifth_line_type_ids', to='visual_i_ching_app.linetype')),
                ('first_line_type', models.ForeignKey(db_comment='Foreign key, references line_types.line_type_id, represents the type of the first (bottom) line of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='first_line_type_ids', to='visual_i_ching_app.linetype')),
                ('fourth_line_type', models.ForeignKey(db_comment='Foreign key, references line_types.line_type_id, represents the type of the fourth line of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='fourth_line_type_ids', to='visual_i_ching_app.linetype')),
                ('resulting_hexagram', models.ForeignKey(db_comment='Foreign key, references hexgrams.hexagram_id, represents the hexagram that results from the changes in this reading (if there are no changes, this value is null)', default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='resulting_hexagram_ids', to='visual_i_ching_app.hexagram')),
                ('second_line_type', models.ForeignKey(db_comment='Foreign key, references line_types.line_type_id, represents the type of the second line of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='second_line_type_ids', to='visual_i_ching_app.linetype')),
                ('sixth_line_type', models.ForeignKey(db_comment='Foreign key, references line_types.line_type_id, represents the type of the sixth (top) line of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='sixth_line_type_ids', to='visual_i_ching_app.linetype')),
                ('starting_hexagram', models.ForeignKey(db_comment='Foreign key, references hexgrams.hexagram_id, represents the starting hexagram of this reading', on_delete=django.db.models.deletion.PROTECT, related_name='starting_hexagram_ids', to='visual_i_ching_app.hexagram')),
                ('third_line_type', models.ForeignKey(db_comment='Foreign key, references line_types.line_type_id, represents the type of the third line of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='third_line_type_ids', to='visual_i_ching_app.linetype')),
                ('user', models.ForeignKey(db_comment="Foreign key, references Django's built-in users.id, represents the user that prepared this reading", on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'readings',
                'db_table_comment': 'A record for each reading prepared by a user',
            },
        ),
        migrations.CreateModel(
            name='HexagramLine',
            fields=[
                ('hexagram_line_id', models.BigAutoField(db_comment='Primary key representing a line within the context of a hexagram', primary_key=True, serialize=False)),
                ('position', models.SmallIntegerField(db_comment='Represents the position of this line in the hexagram, where 1 is the bottom and 6 is the top')),
                ('is_constituting_ruler', models.BooleanField(db_comment='TRUE if this line is the constituting ruler of its hexagram')),
                ('is_governing_ruler', models.BooleanField(db_comment='TRUE if this line is the governing ruler of its hexagram')),
                ('monogram_symbol', models.CharField(db_comment='Unicode representation of the monogram', max_length=1)),
                ('change_text', models.TextField(db_comment="English translation of the written interpretation of this line's change")),
                ('change_interpretation', models.TextField(db_comment='Intepretation of this judgment offered by a commentator')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='Time (in UTC) at which this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='Time (in UTC) at which this record was most recently updated')),
                ('deleted_at', models.DateTimeField(blank=True, db_comment="Time (in UTC) at which this record was 'soft-deleted' (flagged deleted)", default=None, null=True)),
                ('hexagram', models.ForeignKey(db_comment='Foreign key, references hexagrams.hexagram_id, represents the hexagram this line belongs to', on_delete=django.db.models.deletion.PROTECT, related_name='hexagram_ids', to='visual_i_ching_app.hexagram')),
            ],
            options={
                'db_table': 'hexagram_lines',
                'db_table_comment': 'A record for each line within each hexagram',
            },
        ),
        migrations.AddField(
            model_name='hexagram',
            name='lower_nuclear_trigram',
            field=models.ForeignKey(db_comment='Foreign key, references trigrams.trigram_id, represents the lower nuclear trigram of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='lower_nuclear_trigram_ids', to='visual_i_ching_app.trigram'),
        ),
        migrations.AddField(
            model_name='hexagram',
            name='lower_trigram',
            field=models.ForeignKey(db_comment='Foreign key, references trigrams.trigram_id, represents the lower trigram of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='lower_trigram_ids', to='visual_i_ching_app.trigram'),
        ),
        migrations.AddField(
            model_name='hexagram',
            name='upper_nuclear_trigram',
            field=models.ForeignKey(db_comment='Foreign key, references trigrams.trigram_id, represents the upper nuclear trigram of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='upper_nuclear_trigram_ids', to='visual_i_ching_app.trigram'),
        ),
        migrations.AddField(
            model_name='hexagram',
            name='upper_trigram',
            field=models.ForeignKey(db_comment='Foreign key, references trigrams.trigram_id, represents the upper trigram of this hexagram', on_delete=django.db.models.deletion.PROTECT, related_name='upper_trigram_ids', to='visual_i_ching_app.trigram'),
        ),
    ]
